{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample swagger for Fiber",
        "title": "TES SWAGGER PEMROGRAMAN III",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/Fadhail",
            "email": "71423044@std.ulbi.ac.id"
        },
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/adoptions": {
            "get": {
                "description": "Get all adoptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adoptions"
                ],
                "summary": "Get all adoptions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Adoption"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new adoption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adoptions"
                ],
                "summary": "Create a new adoption",
                "parameters": [
                    {
                        "description": "Adoption",
                        "name": "adoption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Adoption"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Adoption"
                        }
                    }
                }
            }
        },
        "/adoptions/my": {
            "get": {
                "description": "Get all adoptions for the currently logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adoptions"
                ],
                "summary": "Get adoptions for current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Adoption"
                            }
                        }
                    }
                }
            }
        },
        "/adoptions/pet/{pet_id}": {
            "get": {
                "description": "Get all adoptions for a specific pet",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adoptions"
                ],
                "summary": "Get adoptions by pet ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet ID",
                        "name": "pet_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Adoption"
                            }
                        }
                    }
                }
            }
        },
        "/adoptions/status": {
            "get": {
                "description": "Get all adoptions filtered by status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adoptions"
                ],
                "summary": "Get adoptions by status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status (pending, approved, rejected)",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Adoption"
                            }
                        }
                    }
                }
            }
        },
        "/adoptions/{id}": {
            "get": {
                "description": "Get an adoption by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adoptions"
                ],
                "summary": "Get an adoption by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Adoption ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Adoption"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an adoption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adoptions"
                ],
                "summary": "Update an adoption",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Adoption ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Adoption",
                        "name": "adoption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Adoption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an adoption",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adoptions"
                ],
                "summary": "Delete an adoption",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Adoption ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/appointments": {
            "get": {
                "description": "Get all appointments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Get all appointments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Appointment"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Create a new appointment",
                "parameters": [
                    {
                        "description": "Appointment",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Appointment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Appointment"
                        }
                    }
                }
            }
        },
        "/appointments/{id}": {
            "get": {
                "description": "Get an appointment by ID with details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Get an appointment by ID with details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Update an appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Appointment",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Appointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an appointment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Delete an appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "User login with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login details",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/owners": {
            "get": {
                "description": "Get all owners",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owners"
                ],
                "summary": "Get all owners",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Owner"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owners"
                ],
                "summary": "Create a new owner",
                "parameters": [
                    {
                        "description": "Owner",
                        "name": "owner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Owner"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Owner"
                        }
                    }
                }
            }
        },
        "/owners/{id}": {
            "get": {
                "description": "Get an owner by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owners"
                ],
                "summary": "Get an owner by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Owner"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owners"
                ],
                "summary": "Update an owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Owner",
                        "name": "owner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Owner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an owner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owners"
                ],
                "summary": "Delete an owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/pets": {
            "get": {
                "description": "Get all pets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pets"
                ],
                "summary": "Get all pets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pet"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new pet",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pets"
                ],
                "summary": "Create a new pet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pet Species",
                        "name": "species",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pet Age",
                        "name": "age",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pet Gender",
                        "name": "gender",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "owner_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Pet Image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Pet"
                        }
                    }
                }
            }
        },
        "/pets/{id}": {
            "get": {
                "description": "Get a pet by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pets"
                ],
                "summary": "Get a pet by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pet"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a pet",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pets"
                ],
                "summary": "Update a pet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pet Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pet Species",
                        "name": "species",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pet Age",
                        "name": "age",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pet Gender",
                        "name": "gender",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "owner_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Pet Image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a pet",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pets"
                ],
                "summary": "Delete a pet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "User registration with email, username, password, and role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "description": "Get all services",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Get all services",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Service"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Create a new service",
                "parameters": [
                    {
                        "description": "Service",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "description": "Get a service by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Get a service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Update a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Delete a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Adoption": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "adoption_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "experience": {
                    "type": "string"
                },
                "has_other_pets": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "living_space": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "other_pets_details": {
                    "type": "string"
                },
                "pet_id": {
                    "type": "string"
                },
                "pet_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "description": "pending, approved, rejected",
                    "type": "string"
                },
                "submission_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_email": {
                    "description": "Email user yang mengajukan adopsi",
                    "type": "string"
                }
            }
        },
        "models.Appointment": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "pet_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "models.Owner": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.Pet": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "species": {
                    "type": "string"
                },
                "status": {
                    "description": "available, pending, adopted",
                    "type": "string"
                }
            }
        },
        "models.Service": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "models.UserLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}